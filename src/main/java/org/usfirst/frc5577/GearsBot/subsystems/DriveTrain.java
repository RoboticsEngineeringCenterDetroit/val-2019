// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc5577.GearsBot.subsystems;

import org.usfirst.frc5577.GearsBot.Robot;
import org.usfirst.frc5577.GearsBot.RobotMap;
import org.usfirst.frc5577.GearsBot.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

/**
 *
 */
public class DriveTrain extends Subsystem {
    SpeedController rightMotor = RobotMap.driveTrainRightMotor;
    SpeedController leftMotor = RobotMap.driveTrainLeftMotor;
    DifferentialDrive robotDrive = RobotMap.driveTrainRobotDrive;

    double driveTrainSpeed = 1.0;

    public DriveTrain() {

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        setDefaultCommand(new DriveWithJoysticks());
    }

    public void driveTrainForwardWithDistance(double distance) {
        robotDrive.arcadeDrive(0.25, 0);
    }

    public void driveTrainFoward(double speed) {
        robotDrive.arcadeDrive(speed, 0);
    }

    public void driveTrainBackward(double speed) {
        robotDrive.arcadeDrive(-speed, 0);
    }

    public void turn(double rotateValue) {
        robotDrive.setSafetyEnabled(true);
        robotDrive.arcadeDrive(0.1, -rotateValue, true);
    }

    public void takeJoystickInputs(Joystick xBoxController) {
        robotDrive.setSafetyEnabled(true);

        /*
         * The two options for driving are tank drive and arcade mode. To choose tank
         * you comment arcade out (i.e. //robotDrive.arcadeDrive...) To choose arcade
         * you comment tank out (i.e. //robotDrive.tankDrive...)
         * 
         */
        // robotDrive.arcadeDrive(xBoxCont);

        robotDrive.arcadeDrive(xBoxController.getRawAxis(Robot.oi.LEFT_AXIS_Y) * driveTrainSpeed,
                -xBoxController.getRawAxis(Robot.oi.LEFT_AXIS_X) * driveTrainSpeed,
                // -xBoxController.getRawAxis(Robot.oi.RIGHT_AXIS_X) * driveTrainSpeed,
                true);
    }

    public void stop() {
        robotDrive.arcadeDrive(0, 0);
    }

}
