// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc5577.GearsBot;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

import com.ctre.phoenix.motorcontrol.can.*;

import org.usfirst.frc5577.GearsBot.subsystems.pid.PIDSourceTalon;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
	public static SpeedControllerGroup driveTrainRightMotor;
	public static SpeedControllerGroup driveTrainLeftMotor;
	public static DifferentialDrive driveTrainRobotDrive;

	public static WPI_TalonSRX blackTalonSRX; // intake
	public static PIDSourceTalon redTalonSRX; // arm
	public static WPI_TalonSRX clearTalonSRX; // elevator
	public static WPI_VictorSPX victorSPX4;
	public static WPI_VictorSPX victorSPX5;
	public static WPI_VictorSPX victorSPX6;
	public static WPI_VictorSPX victorSPX7;

	public static Compressor compressor;
	public static DoubleSolenoid driveTrainSwitch;
	// public static Encoder leftWheelEncoder;
	// public static Encoder rightWheelEncoder;
	public static Encoder elevatorEncoder;
	public static DoubleSolenoid wristSwitch;
	public static DoubleSolenoid hatchPanelSwitch;

	static void init() {

		blackTalonSRX = new WPI_TalonSRX(1); // intake
		redTalonSRX = new PIDSourceTalon(2); // arm
		clearTalonSRX = new WPI_TalonSRX(3); // elevator
		victorSPX4 = new WPI_VictorSPX(4);
		victorSPX5 = new WPI_VictorSPX(5);
		victorSPX6 = new WPI_VictorSPX(6);
		victorSPX7 = new WPI_VictorSPX(7);

		driveTrainLeftMotor = new SpeedControllerGroup(victorSPX4, victorSPX5);
		driveTrainRightMotor = new SpeedControllerGroup(victorSPX6, victorSPX7);

		driveTrainRobotDrive = new DifferentialDrive(driveTrainLeftMotor, driveTrainRightMotor);
		driveTrainRobotDrive.setSafetyEnabled(true);
		driveTrainRobotDrive.setExpiration(0.1);
		driveTrainRobotDrive.setMaxOutput(1.0);

		compressor = new Compressor();
		compressor.setClosedLoopControl(true);

		driveTrainSwitch = new DoubleSolenoid(0, 1);
		driveTrainSwitch.set(DoubleSolenoid.Value.kOff);
		wristSwitch = new DoubleSolenoid(2, 3);
		wristSwitch.set(DoubleSolenoid.Value.kOff);
		hatchPanelSwitch = new DoubleSolenoid(4, 5);
		hatchPanelSwitch.set(DoubleSolenoid.Value.kOff);

		elevatorEncoder = new Encoder(0, 1, true, Encoder.EncodingType.k4X);
		elevatorEncoder.setDistancePerPulse(.147262 / 2);
		elevatorEncoder.setSamplesToAverage(10);
		elevatorEncoder.reset();
	}
}
